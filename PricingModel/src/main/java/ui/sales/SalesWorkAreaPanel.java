/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.sales;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.Business.Business;
import model.Business.ConfigureABusiness;
import model.CustomerManagement.CustomerDirectory;
import model.CustomerManagement.CustomerProfile;
import model.ProductManagement.ProductCatalog;
import model.Supplier.SupplierDirectory;
import ui.Admin.ManageSuppliersPanel;

/**
 *
 * @author HARSH
 */
public class SalesWorkAreaPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private JPanel ProductReviewPanel;
    CustomerDirectory customerDirectory;
    SupplierDirectory supplierDirectory;
    Business business;
    ProductCatalog productCatalog;
    ConfigureABusiness configureABusiness;

    /**
     * Creates new form NewJPanel
     */
    public SalesWorkAreaPanel(JPanel userProcessContainer,Business business) {
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        this.customerDirectory = business.getCustomerDirectory();
        this.supplierDirectory = business.getSupplierDirectory();
        this.productCatalog=productCatalog;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtCustomer = new javax.swing.JTextField();
        btnProductReview = new javax.swing.JButton();
        btnUpdateProduct = new javax.swing.JButton();
        btnServeCustomer = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 102, 0));
        setPreferredSize(new java.awt.Dimension(866, 605));

        jLabel1.setText("Customer");

        btnProductReview.setText("Product Details");
        btnProductReview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProductReviewActionPerformed(evt);
            }
        });

        btnUpdateProduct.setText("Product Update ");
        btnUpdateProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateProductActionPerformed(evt);
            }
        });

        btnServeCustomer.setText("search ");
        btnServeCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnServeCustomerActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Sales Work Area");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(btnProductReview)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnUpdateProduct)
                .addGap(70, 70, 70))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnServeCustomer)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(69, 69, 69)
                                .addComponent(txtCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(369, 369, 369)
                        .addComponent(jLabel2)))
                .addContainerGap(284, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jLabel2)
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(30, 30, 30)
                .addComponent(btnServeCustomer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProductReview)
                    .addComponent(btnUpdateProduct))
                .addGap(193, 193, 193))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnProductReviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProductReviewActionPerformed
       // Example getter
 SupplierDirectory supplierDirectory = business.getSupplierDirectory();

    // Validate if SupplierDirectory has suppliers
    if (supplierDirectory == null || supplierDirectory.getSuplierList().isEmpty()) {
        JOptionPane.showMessageDialog(this, "No suppliers available!", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Retrieve ProductCatalog from the first supplier
    ProductCatalog productCatalog = supplierDirectory.getSuplierList().get(0).getProductCatalog();

    // Validate if ProductCatalog exists and has products
    if (productCatalog == null || productCatalog.getProductList().isEmpty()) {
        JOptionPane.showMessageDialog(this, "No products available!", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Navigate to ProductReviewPanel
    ProductReviewPanel reviewPanel = new ProductReviewPanel(userProcessContainer, productCatalog, supplierDirectory);
    userProcessContainer.add("ProductReviewPanel", reviewPanel);

    // Switch to the ProductReviewPanel
    CardLayout layout = (CardLayout) userProcessContainer.getLayout();
    layout.next(userProcessContainer);
    }//GEN-LAST:event_btnProductReviewActionPerformed

    private void btnServeCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnServeCustomerActionPerformed
        // TODO add your handling code here:
        String customerName = txtCustomer.getText().trim(); // Retrieve and trim the text from the JTextField


       CustomerProfile foundCustomer = null; // Assuming CustomerProfile is the correct class

for (CustomerProfile customer : customerDirectory.getCustomerlist()) { // Adjusted to match your CustomerDirectory class
    if (customer.getPerson().getPersonId().equalsIgnoreCase(customerName)) { 
        foundCustomer = customer;
        System.out.println("Customer Found: " + customer);
        break;
    }
}

if (foundCustomer == null) {
    JOptionPane.showMessageDialog(this, "Customer not found. Please check the name.", "Error", JOptionPane.ERROR_MESSAGE);
} else {
    // Navigate to OrderAreaPanel or any next process
    OrderAreaPanel orderAreaPanel = new OrderAreaPanel(userProcessContainer,productCatalog, supplierDirectory, foundCustomer);

    // Add the OrderAreaPanel to the userProcessContainer
    userProcessContainer.add("OrderAreaPanel", orderAreaPanel);

    // Switch to the newly added panel
    CardLayout layout = (CardLayout) userProcessContainer.getLayout();
    layout.next(userProcessContainer);
}






    

        // Display customer name or use it for further operations
  
    

    }//GEN-LAST:event_btnServeCustomerActionPerformed

    private void btnUpdateProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateProductActionPerformed
        // TODO add your handling code here:
       SupplierDirectory supplierDirectory = business.getSupplierDirectory();
    if (supplierDirectory == null) {
        JOptionPane.showMessageDialog(this, "Supplier Directory is not initialized.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Create and navigate to UpdateProductPanel
    UpdateProductPanel updateProductPanel = new UpdateProductPanel(userProcessContainer, supplierDirectory);
    userProcessContainer.add("UpdateProductPanel", updateProductPanel);
    CardLayout layout = (CardLayout) userProcessContainer.getLayout();
    layout.next(userProcessContainer);
    }//GEN-LAST:event_btnUpdateProductActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnProductReview;
    private javax.swing.JButton btnServeCustomer;
    private javax.swing.JButton btnUpdateProduct;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtCustomer;
    // End of variables declaration//GEN-END:variables



}

